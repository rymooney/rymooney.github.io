[
  {
    "objectID": "TextAnalysis.html",
    "href": "TextAnalysis.html",
    "title": "Text Analysis",
    "section": "",
    "text": "The Task\nToday, I will be practicing my text analysis using str_*() commands, regular expressions, and plotting character-based data! To do this, I will be analyzing character data from all of The New York Times’ headlines from years 1996-2006.\n\n\nThe Data\nThe data is sample dataset containing headlines from The New York Times, compiled by Professor Amber E. Boydstun at the University of California, Davis. The dataset can be accessed in the RTextTools library on R from the RTextTools package. The data is in the library in a data frame called NYTimes.\n\nlibrary(tidyverse)\nlibrary(RTextTools) \ndata(NYTimes)\nas_tibble(NYTimes)\n\n# A tibble: 3,104 × 5\n   Article_ID Date      Title                                 Subject Topic.Code\n        &lt;int&gt; &lt;fct&gt;     &lt;fct&gt;                                 &lt;fct&gt;        &lt;int&gt;\n 1      41246 1-Jan-96  Nation's Smaller Jails Struggle To C… Jails …         12\n 2      41257 2-Jan-96  FEDERAL IMPASSE SADDLING STATES WITH… Federa…         20\n 3      41268 3-Jan-96  Long, Costly Prelude Does Little To … Conten…         20\n 4      41279 4-Jan-96  Top Leader of the Bosnian Serbs Now … Bosnia…         19\n 5      41290 5-Jan-96  BATTLE OVER THE BUDGET: THE OVERVIEW… Battle…          1\n 6      41302 7-Jan-96  South African Democracy Stumbles on … politi…         19\n 7      41314 8-Jan-96  Among Economists, Little Fear on Def… econom…          1\n 8      41333 10-Jan-96 BATTLE OVER THE BUDGET: THE OVERVIEW… budget…          1\n 9      41344 11-Jan-96 High Court Is Cool To Census Change   census…         20\n10      41355 12-Jan-96 TURMOIL AT BARNEYS: THE DIFFICULTIES… barney…         15\n# ℹ 3,094 more rows\n\n\nThe libraries I will need:\n\nlibrary(tidyverse) \nlibrary(ggrepel)\nlibrary(stringr)\nlibrary(lubridate)\n\n\n\nLet’s analyze!\nLet’s see what years the dataset has.\n\nNYTimes_dates &lt;- NYTimes |&gt;\n  mutate(date_as_dmy = dmy(Date)) |&gt;\n  summarize(\n    earliestdate = min(date_as_dmy, na.rm = TRUE),\n    latestdate   = max(date_as_dmy, na.rm = TRUE)\n  )\n\nNYTimes_dates\n\n  earliestdate latestdate\n1   1996-01-01 2006-12-31\n\n\nFirst, I know that President Bush was a hot topic during these years.\nLet’s see the distribution of this over the years included in this dataset. I also want to exclude the mention of bush fires, which also took place and may have been talked about on NYT often, so I will reflect that in my regular expression using a negative look-forward!\n\nbush_mentioned &lt;- NYTimes |&gt;\n  mutate(Title_lower = str_to_lower(Title))|&gt;\n  mutate(date = dmy(Date))|&gt;\n  mutate(year = year(date))|&gt;\n  filter(str_detect(Title_lower, \"\\\\bbush\\\\b(?!\\\\s*fires)\")) |&gt;\n  count(year)\n\nbush_mentioned\n\n  year  n\n1 1999  2\n2 2000 15\n3 2001 32\n4 2002 20\n5 2003 16\n6 2004 20\n7 2005 13\n8 2006  8\n\nggplot(bush_mentioned, aes(x = year, y = n)) +\n  geom_line() +\n  labs(\n    title = \"Presence of 'Bush' in NYT Headlines yearly (1996–2006)\",\n    x = \"Year\",\n    y = \"summed count per year\"\n  ) \n\n\n\n\n\n\n\n\nThere was a peak in the mentions of “Bush” in the year 2001. This makes sense due to his inauguration as President of the United States and the September 11th both taking place that year.\nOn the topic of presidents, let’s quantify how much different presidents were talked about in the New York Times across the time frame represented by this data. I will use another regular expression to find the words “Bush”, “Clinton”, and “Obama”, excluding the search for “bush fire”, mentions of “Hillary Clinton”, and “Michelle Obama”, as for this analysis I am only looking for information on the presidents. To do this, I will make use of a couple of lookarounds, which are proving to be quite useful for specifying data!\n\npresident_names &lt;- NYTimes |&gt;\n  mutate(\n    titles_lower = str_to_lower(Title),\n    president = str_extract(\n      titles_lower,\n      \"(?&lt;!laura\\\\s)\\\\bbush(?!\\\\s*fires?)\\\\b|(?&lt;!hillary\\\\s)\\\\bclinton\\\\b|\n      (?&lt;!michelle\\\\s)\\\\bobama\\\\b\")) |&gt;\n  select(titles_lower, president) |&gt;\n  filter(!is.na(president))|&gt;\n  group_by(president)|&gt;\n  summarize(count=n())\n\n\npresident_names |&gt;\n  ggplot(aes(x = president, y = count)) +\n  geom_col()+\n  labs(\n    title = 'Mentions of \"Bush\" and \"Clinton\" in NYT Headlines (1996–2006)',\n    x = \"President\",\n    y = \"Count\"\n  ) \n\n\n\n\n\n\n\n\nSo, Bush was mentioned more than Clinton in this dataset from the years 1996 to 2006. Both were mentioned more than Obama, with 0 mentions.This makes sense as Obama only started running for election in 2007, right after this dataset ends. However, it is a bit surprising that he wasn’t mentioned at all prior to the year before his election. Curious!\nFinally, I am interested to see how the timing of the mentions of each of these presidents compares and if I can pull out historical dates from the peaks in the following plot.\n\npresidents_mentioned &lt;- NYTimes |&gt;\n  mutate(Title_lower = str_to_lower(Title)) |&gt;\n  mutate(date = dmy(Date)) |&gt;\n  mutate(year = year(date)) |&gt;\n  filter(str_detect(Title_lower, \"\\\\b(bush(?!\\\\s*fires?)|clinton)\\\\b\")) |&gt;\n  mutate(\n    president = ifelse(\n      str_detect(Title_lower, \"\\\\bbush(?!\\\\s*fires?)\\\\b\"),\n      \"Bush\", \"Clinton\")) |&gt;\n  group_by(year, president) |&gt;\n  summarize(n = n(), .groups = \"drop\")\n\nggplot(presidents_mentioned, aes(x = year, y = n, color = president)) +\n  geom_line() +\n  geom_point()+\n  scale_x_continuous(breaks = seq(1996, 2006, by = 1)) +\n  labs(\n    title = \"Presence of 'Bush' and 'Clinton' in NYT Headlines\",\n    subtitle= \"1996-2006\",\n    x = \"Year\",\n    y = \"Summed count per year\",\n    color = \"President\"\n  )\n\n\n\n\n\n\n\n\nWe can see that the mentions of “Clinton” peak in 1998, when he was impeached. Mentions of “Bush” begin rising shortly after, with this pattern starting to get mentioned in 1999, when his campaign for presidential election was occuring and leading to his victory in 2000. Bush was inaugurated in 2001 and that year is also when the September 11th attacks took place, so mentions of Bush were extremely high that year. There is another peak in 2004 in “Bush” mentions again, given his re-election as president.\nWe can use text data to see how much different topics are being talked about in the media, which is a very important thing to know, and it can be useful to identify specific periods of interest.\nAnd… that’s it for today!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ryan Mooney",
    "section": "",
    "text": "Hi there! I am Ryan, a student at Pomona College majoring in Molecular Biology and minoring in Data Science. I am an aspiring biomedical researcher, with keen interests in cancer biology and immuno-oncology. Sequencing has revolutionized how we analyze genetic information, so minoring in data science has provided me with invaluable skills to approach translational research questions. I love learning, and pursuing a career in research is how I plan to continue doing what I love (to learn!). I am a rather crafty person, and I particularly enjoy knitting, sewing, and collaging.\nCheck out the pages on my site to learn more about me!"
  },
  {
    "objectID": "simulation.html",
    "href": "simulation.html",
    "title": "simulation",
    "section": "",
    "text": "The Task\nToday, my goal is to simulate probabilities related to the accumulation of genetic mutations in somatic cells, which are key drivers of oncogenesis. The mutations being modeled arise from spontaneous events in cells and environmental conditions. I will be modeling these mutations from a single cell the undergoes n mitotic divisions and yields a final cell lineage. At each division, I will assume there is an equal probability, prob, that a mutation occurs. Once any mutation happens, the lineage is considered “mutated” and is no longer considered a wild type population. We want to estimate the probability that the lineage has at least 1 mutation after n divisions.\n\n\nBeginning the model\nTo begin, I will set up a function to detect mutations. To do this, I will write a function with two inputs, one being the number of divisions, n_divisions, that we can model the cell dividing n times, and the second being prob, the probability of a mutation occuring at each division. For each division, I will generate a random uniform number between 0 and 1 with runif(). Then, I will compare this number with the probability value, prob, and say that there was a mutation if the random uniform number generated at that division is &lt; the probability that there is a mutation at that division. This will create a logical vector. If the sum of this logical vector is greater than 0, then there is a mutation in that simulated lineage.\n\nset.seed(4747)\n\nhas_mutation_after_divisions &lt;- function(n_divisions, prob){\n  random &lt;- runif(n_divisions)\n  mutation_flag &lt;- random &lt; prob\n  total_mutations &lt;- sum(mutation_flag)\n  total_mutations &gt; 0\n}\n\nThe above logic can be used to continue simulating on larger numbers of lineages. To start, we will simulate the probability of 0.001, meaning a 0.1% chance that each cell division has a 0.1% chance of generating a new mutation that persists in the lineage. I will also start with 10000 cells to simulate per division count. I will simulate these 10000 cells to go through 50 cell divisions. I will then use map() piped into list_rbind() to create a data frame that has two columns: divisions, meaning the number of cell divisions each lineage undergoes, and prob_mutated, the probability that at least one lineage has accumulated a mutation. The inner map_lgl() simulates n_cells cells going through the divisions, and suns the has_mutation_after_divisions() function defined above on each cell lineage. This inner map_lgl() function returns TRUE if a lineage picked up at least one mutation, and returns FALSE otherwise. The final tibble() summarize the results for each of the 10000 cells after each division cycle, and calculates the proportion of TRUE values after that division cycle. The final pipe into list_rbind() gives us a final data frame of the proportion of lineages that have a mutation after each division.\n\nlibrary(tidyverse)\n\nset.seed(4747)\nprob &lt;- 0.001\nn_cells &lt;- 10000\nnumber_of_divisions &lt;- 1:50\n\nresults &lt;- map(number_of_divisions, function(n) {\n  outcomes &lt;- map_lgl(1:n_cells, function(x) {\n    has_mutation_after_divisions(n_divisions = n, prob = prob)})\n  tibble(divisions = n, prob_mutated = mean(outcomes))\n}) |&gt; list_rbind()\n\nresults\n\n# A tibble: 50 × 2\n   divisions prob_mutated\n       &lt;int&gt;        &lt;dbl&gt;\n 1         1       0.0017\n 2         2       0.0019\n 3         3       0.0028\n 4         4       0.0037\n 5         5       0.005 \n 6         6       0.0062\n 7         7       0.0063\n 8         8       0.0072\n 9         9       0.01  \n10        10       0.0086\n# ℹ 40 more rows\n\n\n\n\nLet’s visualize!\nLet’s visualize what this data frame looks like graphically as mutations are accumulated across the simulated cell populations.\n\nggplot(results, aes(x = divisions, y = prob_mutated)) +\n  geom_line() +\n  geom_point() +\n  labs(\n    title = \"Probability a cell lineage has at least one mutation\",\n    subtitle = \"Mutation probability of 0.1% per division for 10000 starting cells\",\n    x = \"Number of mitotic divisions\",\n    y = NULL\n  ) +\n  theme_minimal(base_size = 14)"
  },
  {
    "objectID": "UNESCO.html",
    "href": "UNESCO.html",
    "title": "UNESCO",
    "section": "",
    "text": "library(tidyverse)\n\n\nThe Data\nI wanted to explore a simple data set comparing UNESCO world heritage sites in Norway, Denmark, and Sweden. The original data is from UNESCO and was downloaded from TidyTuesday. The data also comes from the {pixarfilms} R package by Eric Leung.\n\nunesco &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-02-06/heritage.csv')\n\n\nunesco2 &lt;- unesco |&gt;\n  pivot_longer(\n    cols = c(`2004`, `2022`),\n    names_to = \"year\",\n    values_to = \"number_of_sites\"\n  )\n\n\n\nLet’s plot the data!\n\nggplot(unesco2, aes(x = country, y = number_of_sites, color = year)) +\n  geom_point(size = 3) +\n  labs(\n    title = \"UNESCO World Heritage Sites\",\n    x = \"Country\",\n    y = \"Number of Sites\"\n  )\n\n\n\n\n\n\n\n\nShowing the number of World Heritage Sites in Norway, Denmark, and Sweden across 2004 to 2022.\nImage credit: Ryan Mooney"
  },
  {
    "objectID": "data-viz.html",
    "href": "data-viz.html",
    "title": "Data Viz",
    "section": "",
    "text": "This is my data visualization page, where I upload my data visualizations done on TidyTuesday data."
  },
  {
    "objectID": "pixar.html",
    "href": "pixar.html",
    "title": "pixar",
    "section": "",
    "text": "library(tidyverse)\n\n\nThe Data\nLet’s explore a data set about the ratings of pixar films Pixar films; the data here is from the TidyTuesday repo and the original data is from Wikipedia.\n\npixar_ratings &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-03-11/public_response.csv')\n\n\n\nLet’s plot it!\n\npixar_ratings_long &lt;- pixar_ratings |&gt;\n  pivot_longer(\n    cols = c(rotten_tomatoes, metacritic, critics_choice),\n    names_to = \"rating_source\",\n    values_to = \"score\"\n  )|&gt;\n  filter(!is.na(score)) \n\nggplot(pixar_ratings_long, aes(x = film, y = score, color = rating_source)) +\n  geom_point(size = 3) +\n  geom_line(aes(group = rating_source)) +\n  labs(\n    title = \"Pixar Movie Ratings\",\n    x = \"Film\",\n    y = \"Score\",\n    color = \"Rating Source\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi and welcome to my site!\n\nMy background\nI am originally from Denver, Colorado. I have three older sisters, who are some of my biggest inspirations. After graduating high school in 2023, I went to Pomona College, where I expect to graduate in 2027 with a Bachelor of Arts in Molecular Biology and a minor in Data Science.\n\n\nMy research experience\nAt Pomona College, I have been involved in research since my freshman year. In Dr. Malkiat Johal’s lab, I work to quantify biomolecular interactions. I have worked on various projects leveraging surface chemistry instruments like Quartz Crystal Microgravimetry with Dissipation Monitoring (QCM-D) and Surface Plasmon Resonance (SPR). My work over my first-year was on the QCM-D, where we quantified off-target effects of beta-cyclodextrin drugs on biomimetic lipid membranes, which was published in Langmuir. I then switched gears over the summer and worked with the SPR to develop a novel method using chemical kinetics data to determine the molecular weight of polyelectrolytes (this work has been submitted, and we are waiting to hear back from the reviewers!). I am working on developing and finalizing some other projects related to enzyme inhibition and immuno-oncological interactions, so stay tuned for updates!\nI have also been fortunate enough to engage in research at Memorial Sloan Kettering Cancer Center under the guidance of Dr. Michael Gormally and Dr. Christopher Klebanoff. Here, I gained training in immuno-oncology and contributed to a project with the goals of designing immunotherapies for solid-phase cancers. Specificaly, this project involved working with cell culture, ELISA, IncuCyte live-cell imaging, and flow cytometry to evaluate and quantify the killing of cancer cells by T cells transduced with cancer neoepitope-specific T cell receptors. I got to experiment with armoring our T cells with additional potency, in the form of constitutive cytokine (IL-18) secretion and by engineering CD8 co-receptor expression. Our results were tremendously promising, and in vivo trials of our work are beginning now!"
  }
]